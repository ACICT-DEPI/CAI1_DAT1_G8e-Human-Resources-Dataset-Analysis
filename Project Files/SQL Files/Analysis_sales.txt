--ANALYSIS


      -- Total Sales
SELECT 
    SUM(so.LineTotal) AS TotalSales
FROM 
    Sales_SalesOrderDetail  so


      -- Total Quantity Sold

SELECT 
    SUM(so.OrderQty) AS TotalQuantitySold
FROM 
    Sales_SalesOrderDetail AS so


	-- Average Sales per Order

SELECT 
    AVG(so.LineTotal) AS AvgSalesPerOrder
FROM 
    Sales_SalesOrderDetail AS so


--1. Total Sales (Total Revenue from All Orders)

SELECT 
   soh.OrderDate, SUM(soh.TotalDue) AS TotalRevenue
FROM 
    Sales_SalesOrderHeader soh
WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY soh.OrderDate


	--2. Sales by Product (Total Sales per Product)

SELECT 
   Top 10 p.Name,
    SUM(od.LineTotal) AS TotalSales
FROM 
    Sales_SalesOrderDetail od
JOIN 
    AdventureWorks2022.Production.Product p ON od.ProductID = p.ProductID
JOIN 
    Sales_SalesOrderHeader soh ON od.SalesOrderID = soh.SalesOrderID
WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY 
    p.Name
ORDER BY 
    TotalSales DESC;


	--3. Sales by Store (Total Sales per Store)

SELECT 
    Top 10 s.Name,
    SUM(od.LineTotal) AS TotalSales
FROM 
    Sales_SalesOrderDetail od
JOIN 
    Sales_SalesOrderHeader soh ON od.SalesOrderID = soh.SalesOrderID
JOIN 
    Sales_Store s ON soh.SalesPersonID = s.SalesPersonID
WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY 
    s.Name
ORDER BY 
    TotalSales DESC;


	--4. Sales by Territory (Total Sales by Region/Territory)

SELECT 
    t.Name,
    SUM(od.LineTotal) AS TotalSales
FROM 
    Sales_SalesOrderDetail od
JOIN 
    Sales_SalesOrderHeader soh ON od.SalesOrderID = soh.SalesOrderID
JOIN 
    Sales_SalesTerritory t ON soh.TerritoryID = t.TerritoryID
WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY 
    t.Name
ORDER BY 
    TotalSales DESC;


	--5. Sales Growth (Year-over-Year)
SELECT 
    YEAR(soh.OrderDate) AS Year,
    SUM(od.LineTotal) AS TotalSales,
    LAG(SUM(od.LineTotal)) OVER (ORDER BY YEAR(soh.OrderDate)) AS PreviousYearSales,
    (SUM(od.LineTotal) - LAG(SUM(od.LineTotal)) OVER (ORDER BY YEAR(soh.OrderDate))) / 
    LAG(SUM(od.LineTotal)) OVER (ORDER BY YEAR(soh.OrderDate)) * 100 AS SalesGrowthPercentage
FROM 
    Sales_SalesOrderDetail od
JOIN 
    Sales_SalesOrderHeader soh ON od.SalesOrderID = soh.SalesOrderID
WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY 
    YEAR(soh.OrderDate)
ORDER BY 
    Year;


	--6. Customer Lifetime Value (CLV)

SELECT 
   Top 10 c.CustomerID,
    
    SUM(soh.TotalDue) AS CustomerLifetimeValue
FROM 
    Sales_SalesOrderHeader soh
JOIN 
    Sales_Customer c ON soh.CustomerID = c.CustomerID
WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY 
    c.CustomerID
ORDER BY 
    CustomerLifetimeValue DESC;


	--7. Average Order Value (AOV)

SELECT 
    AVG(soh.TotalDue) AS AverageOrderValueRevenue
FROM 
    Sales_SalesOrderHeader soh
WHERE 
    soh.Status = 5;  -- Completed Orders (Status = 5)


	--8. Salesperson Performance (Quota vs Actual Sales)

SELECT 
    Top 10 soh.SalesPersonID,
    SUM(od.LineTotal) AS TotalSales,
    spq.SalesQuota,
    (SUM(od.LineTotal) / spq.SalesQuota) * 100 AS SalesPerformancePercentage
FROM 
    Sales_SalesOrderDetail od
JOIN 
    Sales_SalesOrderHeader soh ON od.SalesOrderID = soh.SalesOrderID
JOIN 
    Sales_SalesTerritory st ON soh.TerritoryID = st.TerritoryID
join
    Sales_SalesPerson sp ON st.TerritoryID = sp.TerritoryID
JOIN 
    Sales_SalesPersonQuotaHistory spq ON sp.BusinessEntityID = spq.BusinessEntityID

WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY 
    soh.SalesPersonID, spq.SalesQuota
ORDER BY 
    SalesPerformancePercentage DESC;


	--9. Sales by Special Offers (Revenue Generated from Special Offers)

SELECT 
    sf.Type, sf.Category, sf.SpecialOfferID, sf.DiscountPct,
    SUM(od.LineTotal) AS TotalSalesFromSpecialOffers
FROM 
    Sales_SalesOrderDetail od
JOIN 
    Sales_SalesOrderHeader soh ON od.SalesOrderID = soh.SalesOrderID
JOIN 
    Sales_SpecialOffer sf ON od.SpecialOfferID = sf.SpecialOfferID
JOIN 
    Sales_SpecialOfferProduct sop ON sf.SpecialOfferID = sop.SpecialOfferID
WHERE 
    soh.Status = 5  -- Completed Orders (Status = 5)
GROUP BY 
    sf.Type, sf.Category, sf.SpecialOfferID,sf.DiscountPct
ORDER BY 
    TotalSalesFromSpecialOffers DESC;
